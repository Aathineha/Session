 package com.example.sbi.service;

import org.springframework.stereotype.Service;
import org.springframework.web.client.RestTemplate;
import org.springframework.http.ResponseEntity;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import com.example.sbi.model.DeviceDTO;
import java.util.UUID;

@Service
public class DeviceCredentialService {

    private final RestTemplate restTemplate = new RestTemplate();

    @Value("${config.mgmt.url}") // Read from application.properties or environment variable
    private String configMgmtUrl;

    @Autowired
    private SessionService sessionService;

    public boolean loginAllDevices() {
        try {
            ResponseEntity<DeviceDTO[]> response = restTemplate.getForEntity(configMgmtUrl, DeviceDTO[].class);
            DeviceDTO[] devices = response.getBody();

            if (devices == null || devices.length == 0) {
                return false; // No devices available
            }

            for (DeviceDTO device : devices) {
                String neId = device.getNeId();
                sessionService.storeSession(neId, UUID.randomUUID().toString()); // Store session

                System.out.println("Logged in Device: " + neId);
            }
            return true;
        } catch (Exception e) {
            System.err.println("Error calling Configuration API: " + e.getMessage());
            return false;
        }
    }
}