package com.example.session.controller;

import com.example.session.dto.LoginRequest;
import com.example.session.dto.LogoutRequest;
import com.example.session.entity.SessionEntity;
import com.example.session.repository.SessionRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;

import java.util.List;
import java.util.Optional;
import java.util.UUID;

@RestController
@RequestMapping("/api/sbi")
public class SessionController {

    @Autowired
    private SessionRepository sessionRepository;

    @PostMapping("/login")
    public boolean login(@RequestBody List<LoginRequest> requests) {
        boolean loginSuccess = false;

        for (LoginRequest request : requests) {
            String sessionId = UUID.randomUUID().toString();
            SessionEntity session = new SessionEntity(sessionId, request.getNeId(), request.getIpaddr());
            sessionRepository.save(session);
            loginSuccess = true;
        }

        return loginSuccess;
    }

    @PostMapping("/logout")
    public boolean logout(@RequestBody List<LogoutRequest> requests) {
        boolean logoutSuccess = false;

        for (LogoutRequest request : requests) {
            Optional<SessionEntity> session =
                sessionRepository.findByNeIdAndIpAddress(request.getNeId(), request.getIpaddr());

            if (session.isPresent()) {
                sessionRepository.delete(session.get());
                logoutSuccess = true;
            }
        }

        return logoutSuccess;
    }
}